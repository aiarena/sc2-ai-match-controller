version: "3.9"
services:
  sc2_controller:
    restart: unless-stopped
    build:
      context: ../../
      dockerfile: ./docker/Dockerfile
      target: sc2_controller
      args:
        CARGO_FLAGS: "${TEST_CARGO_FLAGS}"
    environment:
      - "ACSC2_PORT=8083"
      - "ACSC2_PROXY_HOST=proxy_controller"
    volumes:
      - "../testing-maps:/root/StarCraftII/maps"

  bot_controller1:
    restart: unless-stopped
    build:
      context: ../../
      dockerfile: ./docker/Dockerfile
      target: bot_controller
      args:
        CARGO_FLAGS: "${TEST_CARGO_FLAGS}"
    volumes:
      - "../aiarena-test-bots:/bots"
      - "./logs:/logs"
    environment:
      - "ACBOT_PORT=8081"
      - "ACBOT_PROXY_HOST=proxy_controller"

  bot_controller2:
    restart: unless-stopped
    build:
      context: ../../
      dockerfile: ./docker/Dockerfile
      target: bot_controller
      args:
        CARGO_FLAGS: "${TEST_CARGO_FLAGS}"
    volumes:
      - "../aiarena-test-bots:/bots"
    environment:
      - "ACBOT_PORT=8082"
      - "ACBOT_PROXY_HOST=proxy_controller"

  proxy_controller:
    restart: unless-stopped
    build:
      context: ../../
      dockerfile: ./docker/Dockerfile
      target: proxy_controller
      args:
        CARGO_FLAGS: "${TEST_CARGO_FLAGS}"
    environment:
      - "ACPROXY_PORT=8080"
      - "ACPROXY_BOT_CONT_1_HOST=bot_controller1"
      - "ACPROXY_BOT_CONT_2_HOST=bot_controller2"
      - "ACPROXY_SC2_CONT_HOST=sc2_controller"
    volumes:
      - "./test-matches:/app/matches"
      - "./test-config.toml:/app/config.toml"

