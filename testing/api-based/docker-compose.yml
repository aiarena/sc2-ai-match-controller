version: "3.9"
services:
  sc2_controller:
    build:
      context: ../../
      dockerfile: ./docker/Dockerfile
      target: sc2_controller
      args:
        CARGO_FLAGS: "${TEST_CARGO_FLAGS}"
        FEATURES: "mockserver"
    environment:
      - "ACSC2_PORT=8083"
      - "ACSC2_MATCH_CONTROLLER_HOST=match_controller"
      - "ACSC2_PLAYER_1_SEAT=10001"
      - "ACSC2_PLAYER_2_SEAT=10002"
    volumes:
      - "game:/root/StarCraftII/maps"
      - "logs:/logs"

  bot_controller1:
    build:
      context: ../../
      dockerfile: ./docker/Dockerfile
      target: bot_controller
      args:
        CARGO_FLAGS: "${TEST_CARGO_FLAGS}"
        FEATURES: "mockserver"
    ports:
      - "8081:8081"
    environment:
      - "ACBOT_PORT=8081"
      - "ACBOT_MATCH_CONTROLLER_HOST=match_controller"
      - "ACBOT_GAME_HOST=sc2_controller"
      - "ACBOT_GAME_PORT=10001"
    volumes:
      - "bots:/bots"

  bot_controller2:
    build:
      context: ../../
      dockerfile: ./docker/Dockerfile
      target: bot_controller
      args:
        CARGO_FLAGS: "${TEST_CARGO_FLAGS}"
        FEATURES: "mockserver"
    ports:
      - "8082:8082"
    environment:
      - "ACBOT_PORT=8082"
      - "ACBOT_MATCH_CONTROLLER_HOST=match_controller"
      - "ACBOT_GAME_HOST=sc2_controller"
      - "ACBOT_GAME_PORT=10002"
    volumes:
      - "bots:/bots"

  match_controller:
    build:
      context: ../../
      dockerfile: ./docker/Dockerfile
      target: match_controller
      args:
        CARGO_FLAGS: "${TEST_CARGO_FLAGS}"
        FEATURES: "mockserver"
    environment:
      - "ACMATCH_PORT=8080"
      - "ACMATCH_BOT_CONT_1_HOST=bot_controller1"
      - "ACMATCH_BOT_CONT_2_HOST=bot_controller2"
      - "ACMATCH_SC2_CONT_HOST=sc2_controller"
    volumes:
      - "./test-config.toml:/app/config.toml"
      - "bots:/bots"
      - "game:/game"
      - "logs:/logs"

volumes:
     bots:
     game:
     logs:
